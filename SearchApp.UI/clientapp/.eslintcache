[{"C:\\Users\\Gulnaz\\RiderProjects\\SearchApp\\SearchApp.UI\\clientapp\\src\\index.tsx":"1","C:\\Users\\Gulnaz\\RiderProjects\\SearchApp\\SearchApp.UI\\clientapp\\src\\reportWebVitals.ts":"2","C:\\Users\\Gulnaz\\RiderProjects\\SearchApp\\SearchApp.UI\\clientapp\\src\\App.tsx":"3","C:\\Users\\Gulnaz\\RiderProjects\\SearchApp\\SearchApp.UI\\clientapp\\src\\components\\Search.tsx":"4","C:\\Users\\Gulnaz\\RiderProjects\\SearchApp\\SearchApp.UI\\clientapp\\src\\components\\RenderSelected.tsx":"5","C:\\Users\\Gulnaz\\RiderProjects\\SearchApp\\SearchApp.UI\\clientapp\\src\\components\\Suggestions.tsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":205,"mtime":1606888101199,"results":"10","hashOfConfig":"8"},{"size":1981,"mtime":1606888613037,"results":"11","hashOfConfig":"8"},{"size":249,"mtime":1606888127683,"results":"12","hashOfConfig":"8"},{"size":636,"mtime":1606884810911,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"tlu5rm",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\Gulnaz\\RiderProjects\\SearchApp\\SearchApp.UI\\clientapp\\src\\index.tsx",[],["30","31"],"C:\\Users\\Gulnaz\\RiderProjects\\SearchApp\\SearchApp.UI\\clientapp\\src\\reportWebVitals.ts",[],"C:\\Users\\Gulnaz\\RiderProjects\\SearchApp\\SearchApp.UI\\clientapp\\src\\App.tsx",[],"C:\\Users\\Gulnaz\\RiderProjects\\SearchApp\\SearchApp.UI\\clientapp\\src\\components\\Search.tsx",["32"],"import React, { Component } from 'react'\r\nimport Suggestions from './Suggestions';\r\nimport axios from 'axios';\r\nimport RenderSelected from './RenderSelected';\r\n\r\nexport  interface  ObjectResult {\r\n    id: number;\r\n    text: string;\r\n}\r\n\r\n\r\ninterface IState\r\n{\r\n    results:ObjectResult[],\r\n    query:string,\r\n    selected?:ObjectResult\r\n}\r\n\r\n\r\nclass Search extends React.Component<any, IState>\r\n{\r\n    state = {\r\n        query: '',\r\n        results: [],\r\n        selected:undefined\r\n    }\r\n\r\n    getInfo = async() =>\r\n    {\r\n        let url='http://localhost:88/api/search/';\r\n        try {\r\n           await axios.get(url+this.state.query)\r\n                .then(({ data }) =>\r\n                {\r\n                    this.setState({results: data})\r\n                })\r\n        }\r\n        catch (error) {\r\n            console.log(error.message);\r\n        }\r\n\r\n    }\r\n\r\n    handleInputChange = (e:any) =>\r\n    {\r\n        const query=e.target.value;\r\n        this.setState({query:query}, () =>\r\n        {\r\n            if (this.state.query && this.state.query.length !==0)\r\n            {\r\n                if(this.state.query.length>2)\r\n                {\r\n                    this.getInfo()\r\n                }\r\n            }\r\n            else if (!this.state.query)\r\n            {\r\n                this.setState({results:[], selected:undefined})\r\n            }\r\n        })\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <form className=\"container\">\r\n                <h3>Search App</h3>\r\n                <input id=\"search-input\"\r\n                       placeholder=\"Search ...\"\r\n                       onChange={this.handleInputChange}/>\r\n                {this.state.selected===undefined ?\r\n                    <Suggestions results={this.state.results} onclickPassData={(obj)=>\r\n                        this.setState({selected:obj})} />: <></>}\r\n\r\n                <RenderSelected res={this.state.selected}/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default Search","C:\\Users\\Gulnaz\\RiderProjects\\SearchApp\\SearchApp.UI\\clientapp\\src\\components\\RenderSelected.tsx",[],["33","34"],"C:\\Users\\Gulnaz\\RiderProjects\\SearchApp\\SearchApp.UI\\clientapp\\src\\components\\Suggestions.tsx",["35"],"import * as React from 'react'\r\nimport {ObjectResult} from './Search';\r\n\r\nconst Suggestions=({ results, onclickPassData}:{results:ObjectResult[],onclickPassData:(selected:ObjectResult)=>void})=>\r\n{\r\n    if(results.length!==0)\r\n    {\r\n        return(\r\n            <div>\r\n                <ul>\r\n                    {results.map((r:ObjectResult)=>{\r\n                        return(\r\n                            <li key={r.id}><a onClick={()=>onclickPassData(r)} > {r.text}</a></li>)\r\n                    })}\r\n                </ul>\r\n            </div>)\r\n    }\r\n    else\r\n    {\r\n        return(<></>)\r\n    }\r\n}\r\n\r\nexport default Suggestions\r\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":26},{"ruleId":"36","replacedBy":"44"},{"ruleId":"38","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":13,"column":44,"nodeType":"48","endLine":13,"endColumn":81},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar",["49"],["50"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]